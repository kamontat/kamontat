name: Test

on: push

jobs:
  unittest:
    name: "Unittest node/${{ matrix.node-version }} os/${{ matrix.os-version }}"
    strategy:
      fail-fast: true
      matrix:
        node-version:
          - 14 # - LTS (primary)
          - 15 # - Current
        os-version:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.os-version }}
    env:
      OS_VERSION: "${{ matrix.os-version }}"
      NODE_VERSION: "${{ matrix.node-version }}"
    steps:
      - uses: actions/checkout@master
      - name: Node.js (${{ matrix.node-version }})
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache
        run: echo "::set-output name=path::$(yarn cache dir)"
      - name: Restore cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.path }}
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: yarn-${{ runner.os }}-

      - name: Print env information
        run: echo "node $NODE_VERSION ($OS_VERSION)"
      - name: Download dependencies
        run: yarn --verbose --prefer-offline
      - name: Check source code format
        run: yarn lint
      - name: Run unittest with CI mode
        run: |
          if [[ "$NODE_VERSION" == "15" ]] && [[ "$OS_VERSION" == "ubuntu-latest" ]]; then
            yarn coverage:ci
          else
            yarn test:ci
          fi
      - name: upload coverage reports
        uses: actions/upload-artifact@v2
        with:
          name: unittest-report
          path: ${{ github.workspace }}/coverage
          retention-days: 14

  e2e:
    name: E2E test
    strategy:
      fail-fast: true
      matrix:
        node-version:
          - 15 # - Current
        os-version:
          - ubuntu-latest
    runs-on: ${{ matrix.os-version }}
    steps:
      - uses: actions/checkout@master
      - name: Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-${{ runner.os }}-

      - name: Download dependencies
        run: yarn --verbose --prefer-offline
      - name: run integration test with CI mode
        run: yarn test:e2e:ci
        env:
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_DELIVERY_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_DELIVERY_ACCESS_TOKEN }}
          CONTENTFUL_PREVIEW_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_PREVIEW_ACCESS_TOKEN }}
